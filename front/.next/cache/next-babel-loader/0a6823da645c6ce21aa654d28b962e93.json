{"ast":null,"code":"import Axios from \"axios\";\nimport { all, call, put, takeLatest, fork } from \"redux-saga/effects\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\n\nfunction PostAPI(data) {\n  return Axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(PostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: e.response.data\n    });\n  }\n}\n\nfunction CommentAPI(data) {\n  return Axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(CommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: e.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/sagas/post.js"],"names":["Axios","all","call","put","takeLatest","fork","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","PostAPI","data","post","addPost","action","result","type","e","response","CommentAPI","postId","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,IAArC,QAAiD,oBAAjD;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,kBAPP;;AAQA,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,SAAOb,KAAK,CAACc,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMf,IAAI,CAACU,OAAD,EAAUI,MAAM,CAACH,IAAjB,CAAzB;AACA,UAAMV,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEX,gBADE;AAERM,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,CAAP,EAAU;AACV,UAAMhB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEV,gBADE;AAERK,MAAAA,IAAI,EAAEM,CAAC,CAACC,QAAF,CAAWP;AAFT,KAAD,CAAT;AAID;AACF;;AAED,SAASQ,UAAT,CAAoBR,IAApB,EAA0B;AACxB,SAAOb,KAAK,CAACc,IAAN,CAAY,aAAYD,IAAI,CAACS,MAAO,UAApC,EAA+CT,IAA/C,CAAP;AACD;;AACD,UAAUU,UAAV,CAAqBP,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMf,IAAI,CAACmB,UAAD,EAAaL,MAAM,CAACH,IAApB,CAAzB;AACA,UAAMV,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAER,mBADE;AAERG,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,CAAP,EAAU;AACV,UAAMhB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEP,mBADE;AAERE,MAAAA,IAAI,EAAEM,CAAC,CAACC,QAAF,CAAWP;AAFT,KAAD,CAAT;AAID;AACF;;AACD,UAAUW,YAAV,GAAyB;AACvB,QAAMpB,UAAU,CAACE,gBAAD,EAAmBS,OAAnB,CAAhB;AACD;;AACD,UAAUU,eAAV,GAA4B;AAC1B,QAAMrB,UAAU,CAACK,mBAAD,EAAsBc,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMzB,GAAG,CAAC,CAACI,IAAI,CAACmB,YAAD,CAAL,EAAqBnB,IAAI,CAACoB,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import Axios from \"axios\";\r\nimport { all, call, put, takeLatest, fork } from \"redux-saga/effects\";\r\nimport {\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n} from \"../reducers/post\";\r\nfunction PostAPI(data) {\r\n  return Axios.post(\"/api/post\", data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(PostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction CommentAPI(data) {\r\n  return Axios.post(`/api/post/${data.postId}/comment`, data);\r\n}\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(CommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: e.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import create from \"@ant-design/icons/lib/components/IconFont\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga); // 사가미들웨어 실행 rootSaga는 rootReducer와 같은 느낌\n\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true // true면 redux에 관해서 자세한 설명이 나옴\n\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/store/configureStore.js"],"names":["create","createWrapper","applyMiddleware","compose","createStore","reducer","composeWithDevTools","createSagaMiddleware","rootSaga","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,2CAAnB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AACA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,QAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;AAEA,QAAME,QAAQ,GACZ,QACIT,OAAO,CAACD,eAAe,CAAC,GAAGS,WAAJ,CAAhB,CADX,GAEIL,mBAAmB,CAACJ,eAAe,CAAC,GAAGS,WAAJ,CAAhB,CAHzB;AAIA,QAAME,KAAK,GAAGT,WAAW,CAACC,OAAD,EAAUO,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBP,QAAnB,CAAjB,CAT2B,CASoB;;AAC/C,SAAOK,KAAP;AACD,CAXD;;AAaA,MAAMG,OAAO,GAAGf,aAAa,CAACQ,cAAD,EAAiB;AAC5CQ,EAAAA,KAAK,MADuC,CACG;;AADH,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import create from \"@ant-design/icons/lib/components/IconFont\";\r\nimport { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport reducer from \"../reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas\";\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware];\r\n\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : composeWithDevTools(applyMiddleware(...middlewares));\r\n  const store = createStore(reducer, enhancer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga); // 사가미들웨어 실행 rootSaga는 rootReducer와 같은 느낌\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\", // true면 redux에 관해서 자세한 설명이 나옴\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}
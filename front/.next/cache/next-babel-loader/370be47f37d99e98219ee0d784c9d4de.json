{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\82104\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\project\\\\nodebird\\\\front\\\\pages\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { LOAD_POSTS_REQUEST, retweetError } from \"../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading;\n\n  useEffect(function () {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(function () {\n    dispatch({\n      // 페이지 접속시 사용자 정보 불러옴\n      type: LOAD_MY_INFO_REQUEST\n    }); // 메인페이지 불러올때 LOAD_POSTS_REQUEST 호출해줌\n\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          //다 불러왓거나 불러오는중이면 요청을 보내지않는다.\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll); // useEffect에서 만든 add이벤트를 없애줘야함 리턴함수에서 안그럼 데이터 계속 축적되있음\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, _this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"1e/V/SJ6W0cMJgYyESglft0JniM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/pages/index.js"],"names":["React","useEffect","AppLayout","PostForm","PostCard","useSelector","useDispatch","LOAD_POSTS_REQUEST","retweetError","LOAD_MY_INFO_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePosts","loadPostsLoading","alert","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","id"],"mappings":";;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,EAA6BC,YAA7B,QAAiD,kBAAjD;AACA,SAASC,oBAAT,QAAqC,kBAArC;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AADiB,qBAEFD,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAFT;AAAA,MAETC,EAFS,gBAETA,EAFS;;AAAA,sBAGqCT,WAAW,CAC/D,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAD+D,CAHhD;AAAA,MAGTC,SAHS,iBAGTA,SAHS;AAAA,MAGEC,YAHF,iBAGEA,YAHF;AAAA,MAGgBC,gBAHhB,iBAGgBA,gBAHhB;;AAOjBjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIO,YAAJ,EAAkB;AAChBW,MAAAA,KAAK,CAACX,YAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAKAP,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CAAC;AACP;AACAS,MAAAA,IAAI,EAAEX;AAFC,KAAD,CAAR,CADc,CAKd;;AACAE,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGD,GATQ,EASN,EATM,CAAT;AAWAN,EAAAA,SAAS,CAAC,YAAM;AACd,aAASoB,QAAT,GAAoB;AAClB,UACEC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIV,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACrC;AACAP,UAAAA,QAAQ,CAAC;AACPS,YAAAA,IAAI,EAAEb;AADC,WAAD,CAAR;AAGD;AACF;AACF;;AACDe,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,QAArC,EADW,CACqC;AACjD,KAFD;AAGD,GAlBQ,EAkBN,CAACJ,YAAD,EAAeC,gBAAf,CAlBM,CAAT;AAmBA,sBACE,QAAC,SAAD;AAAA,eACGJ,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADT,EAEGE,SAAS,CAACc,GAAV,CAAc,UAACf,IAAD,EAAU;AACvB,0BAAO,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACgB,EAApB;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAlDD;;GAAMrB,I;UACaJ,W,EACFD,W,EACuCA,W;;;KAHlDK,I;AAoDN,eAAeA,IAAf","sourcesContent":["/** @format */\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { LOAD_POSTS_REQUEST, retweetError } from \"../reducers/post\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(\r\n    (state) => state.post\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (retweetError) {\r\n      alert(retweetError);\r\n    }\r\n  }, [retweetError]);\r\n  useEffect(() => {\r\n    dispatch({\r\n      // 페이지 접속시 사용자 정보 불러옴\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    // 메인페이지 불러올때 LOAD_POSTS_REQUEST 호출해줌\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (\r\n        window.scrollY + document.documentElement.clientHeight >\r\n        document.documentElement.scrollHeight - 300\r\n      ) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          //다 불러왓거나 불러오는중이면 요청을 보내지않는다.\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll); // useEffect에서 만든 add이벤트를 없애줘야함 리턴함수에서 안그럼 데이터 계속 축적되있음\r\n    };\r\n  }, [hasMorePosts, loadPostsLoading]);\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => {\r\n        return <PostCard key={post.id} post={post} />;\r\n      })}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
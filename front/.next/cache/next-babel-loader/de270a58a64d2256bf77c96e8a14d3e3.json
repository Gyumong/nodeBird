{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\82104\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\project\\\\nodebird\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { Button, Input, Form } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagesPaths = _useSelector.imagesPaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    // 포스트를 보내고 성공하면 input창을 비워준다.\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    var formData = new FormData();\n    imagesPaths.forEach(function (p) {\n      formData.append(\"image\", i);\n    });\n    formData.append(\"content,text\");\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagesPaths]);\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log(\"images\", e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC0DD\\uAC01\\uC744 \\uAC16\\uACE0 \\uACC4\\uC2E0\\uAC00\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": \"right\"\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagesPaths.map(function (v, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3080/\".concat(v),\n            style: {\n              width: \"200px\"\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onRemoveImage(i),\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostForm, \"pgEBCOg+TCCHarEOCyuajTekItU=\", false, function () {\n  return [useSelector, useInput, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/components/PostForm.js"],"names":["React","useCallback","useState","useRef","useEffect","Button","Input","Form","useSelector","useDispatch","addPost","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","ADD_POST_REQUEST","useInput","PostForm","state","post","imagesPaths","addPostDone","text","onChangeText","setText","dispatch","onSubmit","formData","FormData","forEach","p","append","i","type","data","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","onRemoveImage","index","margin","map","v","display","width"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport { Button, Input, Form } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  addPost,\r\n  UPLOAD_IMAGES_REQUEST,\r\n  REMOVE_IMAGE,\r\n  ADD_POST_REQUEST,\r\n} from \"../reducers/post\";\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nconst PostForm = () => {\r\n  const { imagesPaths, addPostDone } = useSelector((state) => state.post);\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // 포스트를 보내고 성공하면 input창을 비워준다.\r\n    if (addPostDone) {\r\n      setText(\"\");\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    const formData = new FormData();\r\n    imagesPaths.forEach((p) => {\r\n      formData.append(\"image\", i);\r\n    });\r\n    formData.append(\"content,text\");\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: formData,\r\n    });\r\n  }, [text, imagesPaths]);\r\n\r\n  const imageInput = useRef();\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  const onChangeImages = useCallback((e) => {\r\n    console.log(\"images\", e.target.files);\r\n    const imageFormData = new FormData();\r\n    [].forEach.call(e.target.files, (f) => {\r\n      imageFormData.append(\"image\", f);\r\n    });\r\n    dispatch({\r\n      type: UPLOAD_IMAGES_REQUEST,\r\n      data: imageFormData,\r\n    });\r\n  }, []);\r\n\r\n  const onRemoveImage = useCallback(\r\n    (index) => () => {\r\n      dispatch({\r\n        type: REMOVE_IMAGE,\r\n        data: index,\r\n      });\r\n    },\r\n    []\r\n  );\r\n  return (\r\n    <Form\r\n      style={{ margin: \"10px 0 20px\" }}\r\n      encType=\"multipart/form-data\"\r\n      onFinish={onSubmit}\r\n    >\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"어떤 생각을 갖고 계신가요?\"\r\n      />\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          multiple\r\n          hidden\r\n          ref={imageInput}\r\n          onChange={onChangeImages}\r\n        />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagesPaths.map((v, i) => {\r\n          return (\r\n            <div key={v} style={{ display: \"inline-block\" }}>\r\n              <img\r\n                src={`http://localhost:3080/${v}`}\r\n                style={{ width: \"200px\" }}\r\n                alt={v}\r\n              />\r\n              <div>\r\n                <Button onClick={onRemoveImage(i)}>제거</Button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}
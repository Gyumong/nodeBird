{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\82104\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\project\\\\nodebird\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Card, Popover, Button, Avatar, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport Link from \"next/link\";\nimport moment from \"moment\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from \"../reducers/post\";\nimport FollowButton from \"./FollowButton\";\nmoment.locale(\"ko\");\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var onLike = useCallback(function () {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onUnlike = useCallback(function () {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onRetweet = useCallback(function () {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 34\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnlike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, _this)],\n      title: post.RetweetId ? \"\".concat(post.User.nickname, \"\\uB2D8\\uC774 \\uB9AC\\uD2B8\\uC717\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4.\") : null,\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 22\n      }, _this),\n      children: post.RetweetId && post.Retweet ? /*#__PURE__*/_jsxDEV(Card, {\n        cover: post.Retweet.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post.Retweet.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, _this),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            \"float\": \"right\"\n          },\n          children: moment(post.createdAt).format(\"YYYY.MM.DD.\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/user/\".concat(post.Retweet.User.id),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: post.Retweet.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, _this),\n          title: post.Retweet.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            postData: post.Retweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 28\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            \"float\": \"right\"\n          },\n          children: moment(post.createdAt).format(\"YYYY.MM.DD.\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/user/\".concat(post.User.id),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: post.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, _this),\n          title: post.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            postData: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 28\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/user/\".concat(item.User.id),\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: item.User.nickname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostCard, \"lyO9+vcNipOnUaNCdYLi8vUEJjI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/components/PostCard.js"],"names":["React","useState","useCallback","PropTypes","useSelector","useDispatch","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","Link","moment","PostImages","CommentForm","PostCardContent","LIKE_POST_REQUEST","REMOVE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","FollowButton","locale","PostCard","post","dispatch","state","removePostLoading","commentFormOpened","setCommentFormOpened","id","user","me","onLike","alert","type","data","onUnlike","onToggleComment","prev","onRemovePost","onRetweet","liked","Likers","find","v","marginBottom","Images","User","RetweetId","nickname","Retweet","createdAt","format","content","Comments","length","item"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Card, Popover, Button, Avatar, List, Comment } from \"antd\";\r\nimport {\r\n  RetweetOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  EllipsisOutlined,\r\n  HeartTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport Link from \"next/link\";\r\nimport moment from \"moment\";\r\n\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport {\r\n  LIKE_POST_REQUEST,\r\n  REMOVE_POST_REQUEST,\r\n  UNLIKE_POST_REQUEST,\r\n  RETWEET_REQUEST,\r\n} from \"../reducers/post\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\nmoment.locale(\"ko\");\r\n\r\nconst PostCard = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const { removePostLoading } = useSelector((state) => state.post);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const id = useSelector((state) => state.user.me?.id);\r\n\r\n  const onLike = useCallback(() => {\r\n    if (!id) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n    return dispatch({\r\n      type: LIKE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, [id]);\r\n  const onUnlike = useCallback(() => {\r\n    if (!id) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n    return dispatch({\r\n      type: UNLIKE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, [id]);\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    if (!id) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n    return dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, [id]);\r\n\r\n  const onRetweet = useCallback(() => {\r\n    if (!id) {\r\n      return alert(\"로그인이 필요합니다.\");\r\n    }\r\n    return dispatch({\r\n      type: RETWEET_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, [id]);\r\n\r\n  const liked = post.Likers.find((v) => v.id === id);\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" onClick={onRetweet} />,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"heart\"\r\n              onClick={onUnlike}\r\n            />\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onLike} />\r\n          ),\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button\r\n                      type=\"danger\"\r\n                      loading={removePostLoading}\r\n                      onClick={onRemovePost}\r\n                    >\r\n                      삭제\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n        title={\r\n          post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null\r\n        }\r\n        extra={id && <FollowButton post={post} />}\r\n      >\r\n        {post.RetweetId && post.Retweet ? (\r\n          <Card\r\n            cover={\r\n              post.Retweet.Images[0] && (\r\n                <PostImages images={post.Retweet.Images} />\r\n              )\r\n            }\r\n          >\r\n            <span style={{ float: \"right\" }}>\r\n              {moment(post.createdAt).format(\"YYYY.MM.DD.\")}\r\n            </span>\r\n            <Card.Meta\r\n              avatar={\r\n                <Link href={`/user/${post.Retweet.User.id}`}>\r\n                  <a>\r\n                    <Avatar>{post.Retweet.User.nickname[0]}</Avatar>\r\n                  </a>\r\n                </Link>\r\n              }\r\n              title={post.Retweet.User.nickname}\r\n              description={<PostCardContent postData={post.Retweet.content} />}\r\n            />\r\n          </Card>\r\n        ) : (\r\n          <>\r\n            <span style={{ float: \"right\" }}>\r\n              {moment(post.createdAt).format(\"YYYY.MM.DD.\")}\r\n            </span>\r\n            <Card.Meta\r\n              avatar={\r\n                <Link href={`/user/${post.User.id}`}>\r\n                  <a>\r\n                    <Avatar>{post.User.nickname[0]}</Avatar>\r\n                  </a>\r\n                </Link>\r\n              }\r\n              title={post.User.nickname}\r\n              description={<PostCardContent postData={post.content} />}\r\n            />\r\n          </>\r\n        )}\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length}개의 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={\r\n                    <Link href={`/user/${item.User.id}`}>\r\n                      <a>\r\n                        <Avatar>{item.User.nickname[0]}</Avatar>\r\n                      </a>\r\n                    </Link>\r\n                  }\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}
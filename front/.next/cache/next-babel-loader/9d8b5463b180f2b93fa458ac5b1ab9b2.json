{"ast":null,"code":"/** @format */\nimport React from \"react\";\nimport produce from \"immer\";\nexport var init = {\n  mainPosts: [],\n  imagesPaths: [],\n  hasMorePosts: true,\n  // 가져오려는 시도를 하냐마냐는 상태\n  liePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unliePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommetLoading: false,\n  addCommetDone: false,\n  addCommetError: null\n};\nexport var LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport var LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport var LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport var LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport var LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport var LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : init;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostError = null;\n        draft.likePostDone = false;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        var psost = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        psost.Likers.push({\n          id: action.data.UserId\n        });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostError = null;\n        draft.unlikePostDone = false;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        var posts = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        posts.Likers.filter(function (v) {\n          return v.id !== action.data.UserId;\n        });\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsError = null;\n        draft.loadPostsDone = false;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.mainPosts = action.data.concat(draft.mainPosts); // 기존데이터랑 더미데이터 10개 불러와서 합쳐줌\n\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostError = null;\n        draft.addPostDone = false;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data); // 앞에다 추가해야 게시글 맨 앞에옴\n\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostError = null;\n        draft.removePostDone = false;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentPostLoading = true;\n        draft.addCommentPostError = null;\n        draft.addCommentPostDone = false;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        draft.addCommetLoading = false;\n        draft.addCommetDone = true;\n        break;\n      // const postIndex = state.mainPosts.findIndex(\n      //   (v) => v.id === action.data.postId\n      // );\n      // const psost = { ...state.mainPosts[postIndex] };\n      // psost.Comments = [dummyComment(action.data.content), ...psost.Comments];\n      // const mainPosts = [...state.mainPosts];\n      // mainPosts[postIndex] = psost;\n      // return {\n      //   ...state,\n      //   mainPosts,\n      //   addCommentLoading: false,\n      //   addCommentDone: true,\n      // };\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommetLoading = false;\n        draft.addCommetError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/reducers/post.js"],"names":["React","produce","init","mainPosts","imagesPaths","hasMorePosts","liePostLoading","likePostDone","likePostError","unliePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommetLoading","addCommetDone","addCommetError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","likePostLoading","psost","find","v","id","PostId","Likers","push","UserId","error","unlikePostLoading","posts","filter","concat","length","unshift","addCommentPostLoading","addCommentPostError","addCommentPostDone","post","Comments"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React from \"react\";\r\nimport produce from \"immer\";\r\n\r\nexport const init = {\r\n  mainPosts: [],\r\n  imagesPaths: [],\r\n  hasMorePosts: true, // 가져오려는 시도를 하냐마냐는 상태\r\n  liePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unliePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommetLoading: false,\r\n  addCommetDone: false,\r\n  addCommetError: null,\r\n};\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst reducer = (state = init, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostError = null;\r\n        draft.likePostDone = false;\r\n        break;\r\n      case LIKE_POST_SUCCESS:\r\n        const psost = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        psost.Likers.push({ id: action.data.UserId });\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.unlikePostLoading = true;\r\n        draft.unlikePostError = null;\r\n        draft.unlikePostDone = false;\r\n        break;\r\n      case UNLIKE_POST_SUCCESS:\r\n        const posts = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        posts.Likers.filter((v) => v.id !== action.data.UserId);\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostDone = true;\r\n        break;\r\n      case UNLIKE_POST_FAILURE:\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostError = action.error;\r\n        break;\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsError = null;\r\n        draft.loadPostsDone = false;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.mainPosts = action.data.concat(draft.mainPosts); // 기존데이터랑 더미데이터 10개 불러와서 합쳐줌\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.hasMorePosts = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostError = null;\r\n        draft.addPostDone = false;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.mainPosts.unshift(action.data); // 앞에다 추가해야 게시글 맨 앞에옴\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostError = null;\r\n        draft.removePostDone = false;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentPostLoading = true;\r\n        draft.addCommentPostError = null;\r\n        draft.addCommentPostDone = false;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS:\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Comments.unshift(action.data);\r\n        draft.addCommetLoading = false;\r\n        draft.addCommetDone = true;\r\n        break;\r\n      // const postIndex = state.mainPosts.findIndex(\r\n      //   (v) => v.id === action.data.postId\r\n      // );\r\n      // const psost = { ...state.mainPosts[postIndex] };\r\n      // psost.Comments = [dummyComment(action.data.content), ...psost.Comments];\r\n      // const mainPosts = [...state.mainPosts];\r\n      // mainPosts[postIndex] = psost;\r\n      // return {\r\n      //   ...state,\r\n      //   mainPosts,\r\n      //   addCommentLoading: false,\r\n      //   addCommentDone: true,\r\n      // };\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommetLoading = false;\r\n        draft.addCommetError = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}
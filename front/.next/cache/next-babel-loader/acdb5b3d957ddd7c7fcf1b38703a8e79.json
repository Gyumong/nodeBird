{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\82104\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\project\\\\nodebird\\\\front\\\\pages\\\\profile.js\";\n\n/** @format */\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport Head from \"next/head\";\nimport NicknameEditForm from \"../components/NicknameEditForm\";\nimport FollowList from \"../components/FollowList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nimport useSWR from \"swr\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport Router from \"next/router\";\nimport { END } from \"redux-saga\";\nimport wrapper from \"../store/configureStore\";\nimport Axios from \"axios\";\n\nconst fetcher = url => Axios.get(url, {\n  withCredentials: true\n}).then(result => result.data);\n\nconst Profile = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    0: followersLimit,\n    1: setFollowersLimit\n  } = useState(3);\n  const {\n    0: followingsLimit,\n    1: setFollowingsLimit\n  } = useState(3);\n  const {\n    data: followersData,\n    error: followerError\n  } = useSWR(`http://localhost:3080/user/followers?limit=${followersLimit}`, fetcher);\n  const {\n    data: followingsData,\n    error: followingError\n  } = useSWR(`http://localhost:3080/user/followings?limit=${followingsLimit}`, fetcher);\n  useEffect(() => {\n    // 로그인 안한채로 프로필 페이지가면 문제생기는걸 방지해줌\n    if (!(me && me.id)) {\n      Router.push(\"/\");\n    }\n  }, [me && me.id]);\n  const loadMoreFollowings = useCallback(() => {\n    setFollowingsLimit(prev => prev + 3);\n  }, []);\n  const loadMoreFollowers = useCallback(() => {\n    setFollowersLimit(prev => prev + 3);\n  }, []);\n\n  if (!me) {\n    return \"내정보 로딩 중...\";\n  }\n\n  if (followerError || followingError) {\n    console.error(followerError || followingError);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD314\\uB85C\\uC789/\\uD314\\uB85C\\uC6CC \\uB85C\\uB529 \\uC911 \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD \\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [/*#__PURE__*/_jsxDEV(NicknameEditForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\",\n        data: followingsData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n        data: followersData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  Axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    Axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    // 페이지 접속시 사용자 정보 불러옴\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/pages/profile.js"],"names":["React","useEffect","useState","useCallback","AppLayout","Head","NicknameEditForm","FollowList","useDispatch","useSelector","LOAD_MY_INFO_REQUEST","useSWR","LOAD_POSTS_REQUEST","Router","END","wrapper","Axios","fetcher","url","get","withCredentials","then","result","data","Profile","me","state","user","followersLimit","setFollowersLimit","followingsLimit","setFollowingsLimit","followersData","error","followerError","followingsData","followingError","id","push","loadMoreFollowings","prev","loadMoreFollowers","console","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport Head from \"next/head\";\r\nimport NicknameEditForm from \"../components/NicknameEditForm\";\r\nimport FollowList from \"../components/FollowList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\r\nimport useSWR from \"swr\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\nimport Router from \"next/router\";\r\nimport { END } from \"redux-saga\";\r\nimport wrapper from \"../store/configureStore\";\r\nimport Axios from \"axios\";\r\n\r\nconst fetcher = (url) =>\r\n  Axios.get(url, { withCredentials: true }).then((result) => result.data);\r\nconst Profile = () => {\r\n  const { me } = useSelector((state) => state.user);\r\n  const [followersLimit, setFollowersLimit] = useState(3);\r\n  const [followingsLimit, setFollowingsLimit] = useState(3);\r\n  const { data: followersData, error: followerError } = useSWR(\r\n    `http://localhost:3080/user/followers?limit=${followersLimit}`,\r\n    fetcher\r\n  );\r\n  const { data: followingsData, error: followingError } = useSWR(\r\n    `http://localhost:3080/user/followings?limit=${followingsLimit}`,\r\n    fetcher\r\n  );\r\n\r\n  useEffect(() => {\r\n    // 로그인 안한채로 프로필 페이지가면 문제생기는걸 방지해줌\r\n    if (!(me && me.id)) {\r\n      Router.push(\"/\");\r\n    }\r\n  }, [me && me.id]);\r\n\r\n  const loadMoreFollowings = useCallback(() => {\r\n    setFollowingsLimit((prev) => prev + 3);\r\n  }, []);\r\n  const loadMoreFollowers = useCallback(() => {\r\n    setFollowersLimit((prev) => prev + 3);\r\n  }, []);\r\n  if (!me) {\r\n    return \"내정보 로딩 중...\";\r\n  }\r\n\r\n  if (followerError || followingError) {\r\n    console.error(followerError || followingError);\r\n    return <div>팔로잉/팔로워 로딩 중 에러가 발생 했습니다.</div>;\r\n  }\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>내 프로필 | NodeBird</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <NicknameEditForm />\r\n        <FollowList header=\"팔로잉 목록\" data={followingsData} />\r\n        <FollowList header=\"팔로워 목록\" data={followersData} />\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : \"\";\r\n    Axios.defaults.headers.Cookie = \"\";\r\n    if (context.req && cookie) {\r\n      Axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n      // 페이지 접속시 사용자 정보 불러옴\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}
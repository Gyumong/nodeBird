{"ast":null,"code":"/** @format */\nimport { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE } from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  // data를 받음 ex) {id:'abc@naver.com',password:'123456'}\n  return axios.post(\"/user/login\", data); // 받은 data를 토대로 서버에 요청을 보냄\n}\n\nfunction* logIn(action) {\n  // 액션을 받음\n  try {\n    const result = yield call(logInAPI, action.data); // 요청이 성공이면 call로 logInAPI를 실행하고 결괏값을 변수 result에 저장\n    // fork는 비동기 call은 동기 => async await 함수 비슷 결괏값 받으면 실행 ㅇㅇ\n    // action에서 data를 꺼내서 logInAPI 함수에 인자로 보냄\n\n    yield put({\n      // 액션을 dispatch\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  // 로그아웃은 데이터 받을 필요 없음\n  try {\n    const result = yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction followApi(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followApi, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction unfollowApi(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowApi, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction loadUserAPI(data) {\n  return axios.get(`/user/${data}`);\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: e.response.error\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get(\"/user/followers\", data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get(\"/user/followings\", data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: e.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn); // 액션이 들어오면 logIn 제너레이터 함수를 실행, 요청이 들어오면 두번재 인자 함수에 액션을 넘김\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchRemoveFollower), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchChangeNickname), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow), fork(watchLoadUser), fork(watchLoadMyInfo)]);\n}","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","axios","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","logInAPI","data","post","logIn","action","result","type","e","error","response","logOutAPI","logOut","signUpAPI","signUp","console","log","followApi","patch","follow","unfollowApi","delete","unfollow","loadUserAPI","get","loadUser","loadMyInfoAPI","loadMyInfo","changeNicknameAPI","nickname","changeNickname","loadFollowersAPI","loadFollowers","loadFollowingsAPI","loadFollowings","removeFollowerAPI","removeFollower","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnfollow","watchLoadUser","watchLoadMyInfo","watchChangeNickname","watchLoadFollowers","watchLoadFollowings","watchRemoveFollower","userSaga"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n  LOAD_MY_INFO_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  CHANGE_NICKNAME_FAILURE,\r\n  LOAD_FOLLOWERS_REQUEST,\r\n  LOAD_FOLLOWINGS_REQUEST,\r\n  LOAD_FOLLOWERS_SUCCESS,\r\n  LOAD_FOLLOWERS_FAILURE,\r\n  LOAD_FOLLOWINGS_SUCCESS,\r\n  LOAD_FOLLOWINGS_FAILURE,\r\n  REMOVE_FOLLOWER_REQUEST,\r\n  REMOVE_FOLLOWER_SUCCESS,\r\n  REMOVE_FOLLOWER_FAILURE,\r\n} from \"../reducers/user\";\r\n\r\nfunction logInAPI(data) {\r\n  // data를 받음 ex) {id:'abc@naver.com',password:'123456'}\r\n  return axios.post(\"/user/login\", data); // 받은 data를 토대로 서버에 요청을 보냄\r\n}\r\n\r\nfunction* logIn(action) {\r\n  // 액션을 받음\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    // 요청이 성공이면 call로 logInAPI를 실행하고 결괏값을 변수 result에 저장\r\n    // fork는 비동기 call은 동기 => async await 함수 비슷 결괏값 받으면 실행 ㅇㅇ\r\n    // action에서 data를 꺼내서 logInAPI 함수에 인자로 보냄\r\n    yield put({\r\n      // 액션을 dispatch\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/user/logout\");\r\n}\r\n\r\nfunction* logOut() {\r\n  // 로그아웃은 데이터 받을 필요 없음\r\n  try {\r\n    const result = yield call(logOutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post(\"/user\", data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\nfunction followApi(data) {\r\n  return axios.patch(`/user/${data}/follow`);\r\n}\r\nfunction* follow(action) {\r\n  try {\r\n    const result = yield call(followApi, action.data);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\nfunction unfollowApi(data) {\r\n  return axios.delete(`/user/${data}/follow`);\r\n}\r\nfunction* unfollow(action) {\r\n  try {\r\n    const result = yield call(unfollowApi, action.data);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadUserAPI(data) {\r\n  return axios.get(`/user/${data}`);\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get(\"/user\");\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n  try {\r\n    const result = yield call(loadMyInfoAPI);\r\n    yield put({\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: e.response.error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n  return axios.patch(\"/user/nickname\", { nickname: data });\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    const result = yield call(changeNicknameAPI, action.data);\r\n    yield put({\r\n      type: CHANGE_NICKNAME_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n  return axios.get(\"/user/followers\", data);\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n  try {\r\n    const result = yield call(loadFollowersAPI, action.data);\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n  return axios.get(\"/user/followings\", data);\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n  try {\r\n    const result = yield call(loadFollowingsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removeFollowerAPI(data) {\r\n  return axios.delete(`/user/follower/${data}`);\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n  try {\r\n    const result = yield call(removeFollowerAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_FOLLOWER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: REMOVE_FOLLOWER_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n  // 액션이 들어오면 logIn 제너레이터 함수를 실행, 요청이 들어오면 두번재 인자 함수에 액션을 넘김\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nfunction* watchLoadFollowers() {\r\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\nfunction* watchLoadFollowings() {\r\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\nfunction* watchRemoveFollower() {\r\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchRemoveFollower),\r\n    fork(watchLoadFollowers),\r\n    fork(watchLoadFollowings),\r\n    fork(watchChangeNickname),\r\n    fork(watchChangeNickname),\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n    fork(watchLoadUser),\r\n    fork(watchLoadMyInfo),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
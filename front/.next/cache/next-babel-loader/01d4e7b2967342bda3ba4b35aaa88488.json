{"ast":null,"code":"/** @format */\nimport React from \"react\";\nimport shortId from \"shortid\";\nimport produce from \"immer\";\nimport faker from \"faker\";\nexport var init = {\n  mainPosts: [],\n  imagesPaths: [],\n  hasMorePosts: true,\n  // 가져오려는 시도를 하냐마냐는 상태\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommetLoading: false,\n  addCommetDone: false,\n  addCommetError: null\n};\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function (v, i) {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.image()\n      }],\n      Comments: [{\n        User: {\n          id: shortId.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.paragraph()\n      }]\n    };\n  });\n};\nexport var LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport var LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport var LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"밈구\"\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : init;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsError = null;\n        draft.loadPostsDone = false;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.mainPosts = action.data.concat(draft.mainPosts); // 기존데이터랑 더미데이터 10개 불러와서 합쳐줌\n\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostError = null;\n        draft.addPostDone = false;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data); // 앞에다 추가해야 게시글 맨 앞에옴\n\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostError = null;\n        draft.removePostDone = false;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentPostLoading = true;\n        draft.addCommentPostError = null;\n        draft.addCommentPostDone = false;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        draft.addCommetLoading = false;\n        draft.addCommetDone = true;\n        break;\n      // const postIndex = state.mainPosts.findIndex(\n      //   (v) => v.id === action.data.postId\n      // );\n      // const post = { ...state.mainPosts[postIndex] };\n      // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n      // const mainPosts = [...state.mainPosts];\n      // mainPosts[postIndex] = post;\n      // return {\n      //   ...state,\n      //   mainPosts,\n      //   addCommentLoading: false,\n      //   addCommentDone: true,\n      // };\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommetLoading = false;\n        draft.addCommetError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/reducers/post.js"],"names":["React","shortId","produce","faker","init","mainPosts","imagesPaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommetLoading","addCommetDone","addCommetError","generateDummyPost","number","Array","fill","map","v","i","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyComment","reducer","state","action","draft","concat","length","error","unshift","filter","addCommentPostLoading","addCommentPostError","addCommentPostDone","post","find","PostId"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React from \"react\";\r\nimport shortId from \"shortid\";\r\nimport produce from \"immer\";\r\nimport faker from \"faker\";\r\nexport const init = {\r\n  mainPosts: [],\r\n  imagesPaths: [],\r\n  hasMorePosts: true, // 가져오려는 시도를 하냐마냐는 상태\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommetLoading: false,\r\n  addCommetDone: false,\r\n  addCommetError: null,\r\n};\r\n\r\nexport const generateDummyPost = (number) =>\r\n  Array(number)\r\n    .fill()\r\n    .map((v, i) => ({\r\n      id: shortId.generate(),\r\n      User: {\r\n        id: shortId.generate(),\r\n        nickname: faker.name.findName(),\r\n      },\r\n      content: faker.lorem.paragraph(),\r\n      Images: [\r\n        {\r\n          src: faker.image.image(),\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: faker.name.findName(),\r\n          },\r\n          content: faker.lorem.paragraph(),\r\n        },\r\n      ],\r\n    }));\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"밈구\",\r\n  },\r\n});\r\nconst reducer = (state = init, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsError = null;\r\n        draft.loadPostsDone = false;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.mainPosts = action.data.concat(draft.mainPosts); // 기존데이터랑 더미데이터 10개 불러와서 합쳐줌\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.hasMorePosts = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostError = null;\r\n        draft.addPostDone = false;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.mainPosts.unshift(action.data); // 앞에다 추가해야 게시글 맨 앞에옴\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostError = null;\r\n        draft.removePostDone = false;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentPostLoading = true;\r\n        draft.addCommentPostError = null;\r\n        draft.addCommentPostDone = false;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS:\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Comments.unshift(action.data);\r\n        draft.addCommetLoading = false;\r\n        draft.addCommetDone = true;\r\n        break;\r\n      // const postIndex = state.mainPosts.findIndex(\r\n      //   (v) => v.id === action.data.postId\r\n      // );\r\n      // const post = { ...state.mainPosts[postIndex] };\r\n      // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n      // const mainPosts = [...state.mainPosts];\r\n      // mainPosts[postIndex] = post;\r\n      // return {\r\n      //   ...state,\r\n      //   mainPosts,\r\n      //   addCommentLoading: false,\r\n      //   addCommentDone: true,\r\n      // };\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommetLoading = false;\r\n        draft.addCommetError = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}
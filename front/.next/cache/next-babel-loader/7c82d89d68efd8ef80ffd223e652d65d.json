{"ast":null,"code":"/** @format */\nimport React from \"react\";\nimport produce from \"immer\";\nexport const init = {\n  mainPosts: [],\n  imagesPaths: [],\n  hasMorePosts: true,\n  // 가져오려는 시도를 하냐마냐는 상태\n  liePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unliePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommetLoading: false,\n  addCommetDone: false,\n  addCommetError: null\n};\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst reducer = (state = init, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsError = null;\n      draft.loadPostsDone = false;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.mainPosts = action.data.concat(draft.mainPosts); // 기존데이터랑 더미데이터 10개 불러와서 합쳐줌\n\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.hasMorePosts = draft.mainPosts.length < 50;\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostError = null;\n      draft.addPostDone = false;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.mainPosts.unshift(action.data); // 앞에다 추가해야 게시글 맨 앞에옴\n\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostError = null;\n      draft.removePostDone = false;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentPostLoading = true;\n      draft.addCommentPostError = null;\n      draft.addCommentPostDone = false;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n      post.Comments.unshift(action.data);\n      draft.addCommetLoading = false;\n      draft.addCommetDone = true;\n      break;\n    // const postIndex = state.mainPosts.findIndex(\n    //   (v) => v.id === action.data.postId\n    // );\n    // const post = { ...state.mainPosts[postIndex] };\n    // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n    // const mainPosts = [...state.mainPosts];\n    // mainPosts[postIndex] = post;\n    // return {\n    //   ...state,\n    //   mainPosts,\n    //   addCommentLoading: false,\n    //   addCommentDone: true,\n    // };\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommetLoading = false;\n      draft.addCommetError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/reducers/post.js"],"names":["React","produce","init","mainPosts","imagesPaths","hasMorePosts","liePostLoading","likePostDone","likePostError","unliePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommetLoading","addCommetDone","addCommetError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","concat","length","error","unshift","filter","v","id","addCommentPostLoading","addCommentPostError","addCommentPostDone","post","find","PostId","Comments"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React from \"react\";\r\nimport produce from \"immer\";\r\n\r\nexport const init = {\r\n  mainPosts: [],\r\n  imagesPaths: [],\r\n  hasMorePosts: true, // 가져오려는 시도를 하냐마냐는 상태\r\n  liePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unliePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommetLoading: false,\r\n  addCommetDone: false,\r\n  addCommetError: null,\r\n};\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst reducer = (state = init, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsError = null;\r\n        draft.loadPostsDone = false;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.mainPosts = action.data.concat(draft.mainPosts); // 기존데이터랑 더미데이터 10개 불러와서 합쳐줌\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.hasMorePosts = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostError = null;\r\n        draft.addPostDone = false;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.mainPosts.unshift(action.data); // 앞에다 추가해야 게시글 맨 앞에옴\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostError = null;\r\n        draft.removePostDone = false;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentPostLoading = true;\r\n        draft.addCommentPostError = null;\r\n        draft.addCommentPostDone = false;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS:\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Comments.unshift(action.data);\r\n        draft.addCommetLoading = false;\r\n        draft.addCommetDone = true;\r\n        break;\r\n      // const postIndex = state.mainPosts.findIndex(\r\n      //   (v) => v.id === action.data.postId\r\n      // );\r\n      // const post = { ...state.mainPosts[postIndex] };\r\n      // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n      // const mainPosts = [...state.mainPosts];\r\n      // mainPosts[postIndex] = post;\r\n      // return {\r\n      //   ...state,\r\n      //   mainPosts,\r\n      //   addCommentLoading: false,\r\n      //   addCommentDone: true,\r\n      // };\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommetLoading = false;\r\n        draft.addCommetError = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}
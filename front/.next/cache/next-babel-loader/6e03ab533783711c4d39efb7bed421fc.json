{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport user from \"./user\";\nimport post from \"./post\";\nimport { combineReducers } from \"redux\";\nconst init = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    singUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\nexport const loginAction = data => {\n  return {\n    type: \"LOG_IN\",\n    data\n  };\n};\nexport const logoutAction = data => {\n  return {\n    type: \"LOG_OUT\"\n  };\n};\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        console.log(\"HYDRATE\", action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user,\n  post\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/reducers/index.js"],"names":["HYDRATE","user","post","combineReducers","init","isLoggedIn","singUpData","loginData","mainPosts","loginAction","data","type","logoutAction","rootReducer","index","state","action","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,MAAMC,IAAI,GAAG;AACXH,EAAAA,IAAI,EAAE;AACJI,IAAAA,UAAU,EAAE,KADR;AAEJJ,IAAAA,IAAI,EAAE,IAFF;AAGJK,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GADK;AAOXL,EAAAA,IAAI,EAAE;AACJM,IAAAA,SAAS,EAAE;AADP;AAPK,CAAb;AAYA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,YAAY,GAAIF,IAAD,IAAU;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAKP,MAAME,WAAW,GAAGV,eAAe,CAAC;AAClCW,EAAAA,KAAK,EAAE,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC7B,YAAQA,MAAM,CAACL,IAAf;AACE,WAAKX,OAAL;AACEiB,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACA,+CACKD,KADL,GAEKC,MAAM,CAACG,OAFZ;;AAKF;AACE,eAAOJ,KAAP;AATJ;AAWD,GAbiC;AAclCd,EAAAA,IAdkC;AAelCC,EAAAA;AAfkC,CAAD,CAAnC;AAkBA,eAAeW,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport user from \"./user\";\r\nimport post from \"./post\";\r\nimport { combineReducers } from \"redux\";\r\nconst init = {\r\n  user: {\r\n    isLoggedIn: false,\r\n    user: null,\r\n    singUpData: {},\r\n    loginData: {},\r\n  },\r\n  post: {\r\n    mainPosts: [],\r\n  },\r\n};\r\n\r\nexport const loginAction = (data) => {\r\n  return {\r\n    type: \"LOG_IN\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutAction = (data) => {\r\n  return {\r\n    type: \"LOG_OUT\",\r\n  };\r\n};\r\nconst rootReducer = combineReducers({\r\n  index: (state = {}, action) => {\r\n    switch (action.type) {\r\n      case HYDRATE:\r\n        console.log(\"HYDRATE\", action);\r\n        return {\r\n          ...state,\r\n          ...action.payload,\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  user,\r\n  post,\r\n});\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}
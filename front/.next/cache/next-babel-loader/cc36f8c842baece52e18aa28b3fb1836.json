{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\82104\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\project\\\\nodebird\\\\front\\\\pages\\\\index.js\";\n\n/** @format */\nimport React, { useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // 메인페이지 불러올때 LOAD_POSTS_REQUEST 호출해줌\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll); // useEffect에서 만든 add이벤트를 없애줘야함 리턴함수에서 안그럼 데이터 계속 축적되있음\n    };\n  }, []);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this), mainPosts.map(post => {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/pages/index.js"],"names":["React","useEffect","AppLayout","PostForm","PostCard","useSelector","useDispatch","LOAD_POSTS_REQUEST","Home","dispatch","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","me","state","user","mainPosts","post","map","id"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AACA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH;AADC,KAAD,CAAR;AAGD,GALQ,EAKN,EALM,CAAT;AAOAN,EAAAA,SAAS,CAAC,MAAM;AACd,aAASU,QAAT,GAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CACEC,MAAM,CAACC,OADT,EAEEC,QAAQ,CAACC,eAAT,CAAyBC,YAF3B,EAGEF,QAAQ,CAACC,eAAT,CAAyBE,YAH3B;AAKD;;AACDL,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCT,QAAlC;AACA,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCV,QAArC,EADW,CACqC;AACjD,KAFD;AAGD,GAZQ,EAYN,EAZM,CAAT;AAaA,QAAM;AAAEW,IAAAA;AAAF,MAASjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBpB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAjC;AACA,sBACE,QAAC,SAAD;AAAA,eACGJ,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADT,EAEGG,SAAS,CAACE,GAAV,CAAeD,IAAD,IAAU;AACvB,0BAAO,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhCD;;AAkCA,eAAepB,IAAf","sourcesContent":["/** @format */\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // 메인페이지 불러올때 LOAD_POSTS_REQUEST 호출해줌\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      console.log(\r\n        window.scrollY,\r\n        document.documentElement.clientHeight,\r\n        document.documentElement.scrollHeight\r\n      );\r\n    }\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll); // useEffect에서 만든 add이벤트를 없애줘야함 리턴함수에서 안그럼 데이터 계속 축적되있음\r\n    };\r\n  }, []);\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts } = useSelector((state) => state.post);\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => {\r\n        return <PostCard key={post.id} post={post} />;\r\n      })}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
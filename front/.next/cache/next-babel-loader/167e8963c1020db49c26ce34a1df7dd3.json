{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\82104\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\project\\\\nodebird\\\\front\\\\components\\\\CommentForm.js\";\nimport { Input, Button, Form } from \"antd\";\nimport React, { useCallback, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // 포스트를 보내고 성공하면 input창을 비워준다.\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n  const onSubmit = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n    console.log(post.id, commentText);\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: \"relative\",\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          position: \"absolute\",\n          right: 0,\n          bottom: \"-40px\"\n        },\n        children: \"\\uC9F9\\uC7AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/components/CommentForm.js"],"names":["Input","Button","Form","React","useCallback","useEffect","useInput","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommentDone","commentText","onChangeCommentText","setCommentText","dispatch","onSubmit","type","data","content","postId","userId","console","log","position","margin","right","bottom"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,EAAE,GAAGJ,WAAW,CAAEK,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAqBR,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACF,IAAlB,CAAtC;AAEA,QAAM,CAACM,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDb,QAAQ,CAAC,EAAD,CAAnE;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIW,cAAJ,EAAoB;AAClBG,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GALQ,EAKN,CAACH,cAAD,CALM,CAAT;AAOA,QAAMK,QAAQ,GAAGjB,WAAW,CAAC,MAAM;AACjCgB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEb,mBADC;AAEPc,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEP,WAAX;AAAwBQ,QAAAA,MAAM,EAAEd,IAAI,CAACC,EAArC;AAAyCc,QAAAA,MAAM,EAAEd;AAAjD;AAFC,KAAD,CAAR;AAIAe,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAI,CAACC,EAAjB,EAAqBK,WAArB;AACD,GAN2B,EAMzB,CAACA,WAAD,EAAcL,EAAd,CANyB,CAA5B;AAOA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,QAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEQ,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AACE,QAAA,KAAK,EAAEb,WADT;AAEE,QAAA,QAAQ,EAAEC,mBAFZ;AAGE,QAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,QAAQ,EAAC,QAFX;AAGE,QAAA,KAAK,EAAE;AAAEW,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE;AAA1C,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAvCD;;AAyCA,eAAetB,WAAf","sourcesContent":["import { Input, Button, Form } from \"antd\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\nconst CommentForm = ({ post }) => {\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const { addCommentDone } = useSelector((state) => state.post);\r\n\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // 포스트를 보내고 성공하면 input창을 비워준다.\r\n    if (addCommentDone) {\r\n      setCommentText(\"\");\r\n    }\r\n  }, [addCommentDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId: post.id, userId: id },\r\n    });\r\n    console.log(post.id, commentText);\r\n  }, [commentText, id]);\r\n  return (\r\n    <Form onFinish={onSubmit}>\r\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\r\n        <Input.TextArea\r\n          value={commentText}\r\n          onChange={onChangeCommentText}\r\n          rows={4}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          style={{ position: \"absolute\", right: 0, bottom: \"-40px\" }}\r\n        >\r\n          짹잭\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}
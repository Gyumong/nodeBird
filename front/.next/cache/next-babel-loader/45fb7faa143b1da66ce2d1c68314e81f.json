{"ast":null,"code":"/** @format */\nimport Axios from \"axios\";\nimport { all, call, put, takeLatest, fork, delay } from \"redux-saga/effects\";\nimport shortid from \"shortid\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction AddPostAPI(data) {\n  return Axios.post(\"/api/post\", data);\n}\n\nfunction* loadPost(action) {\n  try {\n    // const result = yield call(AddPostAPI, action.data);\n    const id = shortid.generate();\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: e.response.data\n    });\n  }\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(AddPostAPI, action.data);\n    const id = shortid.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: e.response.data\n    });\n  }\n}\n\nfunction RemovePostAPI(data) {\n  return Axios.delete(\"/api/post\", data);\n}\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(RemovePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (e) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: e.response.data\n    });\n  }\n}\n\nfunction CommentAPI(data) {\n  return Axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(CommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: e.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPost)]);\n}","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/sagas/post.js"],"names":["Axios","all","call","put","takeLatest","fork","delay","shortid","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","AddPostAPI","data","post","loadPost","action","id","generate","type","LOAD_POSTS_SUCCESS","content","e","LOAD_POSTS_FAILURE","response","addPost","RemovePostAPI","delete","removePost","CommentAPI","postId","addComment","watchAddPost","watchRemovePost","watchAddComment","watchLoadPost","LOAD_POSTS_REQUEST","postSaga"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport Axios from \"axios\";\r\nimport { all, call, put, takeLatest, fork, delay } from \"redux-saga/effects\";\r\nimport shortid from \"shortid\";\r\nimport {\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n} from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\r\nfunction AddPostAPI(data) {\r\n  return Axios.post(\"/api/post\", data);\r\n}\r\n\r\nfunction* loadPost(action) {\r\n  try {\r\n    // const result = yield call(AddPostAPI, action.data);\r\n    const id = shortid.generate();\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: {\r\n        id,\r\n        content: action.data,\r\n      },\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      data: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result = yield call(AddPostAPI, action.data);\r\n    const id = shortid.generate();\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: {\r\n        id,\r\n        content: action.data,\r\n      },\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: id,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction RemovePostAPI(data) {\r\n  return Axios.delete(\"/api/post\", data);\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    // const result = yield call(RemovePostAPI, action.data);\r\n\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: action.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction CommentAPI(data) {\r\n  return Axios.post(`/api/post/${data.postId}/comment`, data);\r\n}\r\nfunction* addComment(action) {\r\n  try {\r\n    // const result = yield call(CommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: e.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n    fork(watchRemovePost),\r\n    fork(watchLoadPost),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
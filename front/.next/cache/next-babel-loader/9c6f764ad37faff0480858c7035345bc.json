{"ast":null,"code":"import Axios from \"axios\";\nimport { all, call, put, takeLatest, fork } from \"redux-saga/effects\";\n\nfunction PostAPI(data) {\n  return Axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(PostAPI, action.data);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: e.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/82104/OneDrive/바탕 화면/project/nodebird/front/sagas/post.js"],"names":["Axios","all","call","put","takeLatest","fork","PostAPI","data","post","addPost","action","result","type","e","response","watchAddPost","postSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,IAArC,QAAiD,oBAAjD;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,SAAOP,KAAK,CAACQ,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACI,OAAD,EAAUI,MAAM,CAACH,IAAjB,CAAzB;AACA,UAAMJ,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,kBADE;AAERL,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOM,CAAP,EAAU;AACV,UAAMV,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,kBADE;AAERL,MAAAA,IAAI,EAAEM,CAAC,CAACC,QAAF,CAAWP;AAFT,KAAD,CAAT;AAID;AACF;;AAED,UAAUQ,YAAV,GAAyB;AACvB,QAAMX,UAAU,CAAC,kBAAD,EAAqBK,OAArB,CAAhB;AACD;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAMf,GAAG,CAAC,CAACI,IAAI,CAACU,YAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import Axios from \"axios\";\r\nimport { all, call, put, takeLatest, fork } from \"redux-saga/effects\";\r\n\r\nfunction PostAPI(data) {\r\n  return Axios.post(\"/api/post\", data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(PostAPI, action.data);\r\n    yield put({\r\n      type: \"ADD_POST_SUCCESS\",\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: \"ADD_POST_FAILURE\",\r\n      data: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}